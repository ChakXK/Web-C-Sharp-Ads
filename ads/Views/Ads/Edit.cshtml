@model ads.Models.Ad

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/ADSLayout.cshtml";
}


<section class="ftco-section bg-light ftco-bread">
    <div class="container">
        <div class="row no-gutters slider-text align-items-center">
            <div class="col-md-10 ftco-animate">
                <p class="breadcrumbs">
                    <span><a href="/Ads/Index">Домой</a></span>
                    <span><a href="/Ads/Details/@Model.id">Подробно</a></span><span>Редактирование</span>
                </p>
                <hr />
            </div>
        </div>
    </div>
</section>

@using (Html.BeginForm("Edit", "Ads", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.id)
        @Html.HiddenFor(model => model.idImage)
        @Html.HiddenFor(model => model.datetime)
        @Html.HiddenFor(model => model.idUser)


        <div class="form-group">
            @Html.LabelFor(model => model.datetime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.datetime, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>

        @if (ViewBag.EditStatus == true)
        {
            <div class="form-group">
                @Html.LabelFor(model => model.idStatusAd, "idStatusAd", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("idStatusAd", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.idStatusAd, "", new { @class = "text-danger" })
                </div>
            </div>
        }
        else
        {
            <div class="form-group">
                @Html.LabelFor(model => model.idStatusAd, "idStatusAd", htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.HiddenFor(model => model.idStatusAd)
                <div class="col-md-10">
                    @Html.DisplayFor(model => model.AdStatus.name, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>
        }


        <div class="form-group">
            @Html.LabelFor(model => model.title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.text, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.text, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.text, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.prise, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.prise, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.prise, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.idCity, "idCity", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("idCity", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.idCity, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.idSubject, "idSubject", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("idSubject", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.idSubject, "", new { @class = "text-danger" })
            </div>
        </div>

     
        <div class="form-group">
            @Html.LabelFor(model => model.idStatusAd, "idStatusAd", htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.HiddenFor(model => model.idStatusAd)
            <div class="col-md-10">
           </div>
        </div>

        <div class="form-group">
            <div class="col-md-10">
                <input type="file" name="upload" /> <br />
            </div>
        </div>

        @*<div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <button  name="action" value="Delete" class="btn btn-default" >Удалить изображение</button>
            </div>
        </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.Image.name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.Image.name, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <button name="action" value="Save"  class="btn btn-primary py-3 px-5" >Сохранить</button>
            </div>
        </div>
    </div>
}

